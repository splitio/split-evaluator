inputSet:
  name: split_evaluator_unstable
  tags: {}
  identifier: split_evaluator_unstable
  orgIdentifier: PROD
  projectIdentifier: Harness_Split
  pipeline:
    identifier: deploy_qos_v3
    stages:
      - stage:
          identifier: code_artifact
          type: Deployment
          spec:
            service:
              serviceRef: <+<+expression.isResolved(<+trigger.payload.repository.name>)>?<+trigger.payload.repository.name.replace("-", "")>:<+trigger.payload.artifacts[0].service.replace("-", "")>>
      - parallel:
          - stage:
              identifier: CI
              type: CI
              spec:
                execution:
                  steps:
                    - step:
                        identifier: custom_tag
                        type: Run
                        spec:
                          command: VERSION="$(git rev-parse --short HEAD)"
                        when:
                          condition: "true"
                    - step:
                        identifier: BuildAndPush
                        type: BuildAndPushDockerRegistry
                        spec:
                          repo: <+trigger.payload.repository.name>
                          tags:
                            - <+pipeline.stages.CI_split_evaluator.spec.execution.steps.custom_tag.output.outputVariables.VERSION>
                            - latest
                          dockerfile: ""
                          context: ""
                          buildArgs:
                            CODEARTIFACT_AUTH_TOKEN: <+secrets.getValue("codeartifact-token")>
                            GH_TOKEN: <+secrets.getValue("fme-github-netrc-token")>
                          envVariables:
                            PLUGIN_PLATFORM: linux/amd64,linux/arm64
              strategy:
                matrix:
                  service:
                    - <+trigger.payload.repository.name>
          - stage:
              identifier: ECR
              type: CI
              spec:
                execution:
                  steps:
                    - step:
                        identifier: custom_tag
                        type: Run
                        spec:
                          command: VERSION="$(git rev-parse --short HEAD)"
                        when:
                          condition: "true"
                    - step:
                        identifier: BuildAndPushECR
                        type: BuildAndPushECR
                        spec:
                          imageName: <+trigger.payload.repository.name>
                          tags:
                            - <+pipeline.stages.ECR_split_evaluator.spec.execution.steps.custom_tag.output.outputVariables.VERSION>
                            - latest
                          dockerfile: ""
                          context: ""
                          buildArgs:
                            CODEARTIFACT_AUTH_TOKEN: <+secrets.getValue("codeartifact-token")>
                            GH_TOKEN: <+secrets.getValue("fme-github-netrc-token")>
                          envVariables:
                            PLUGIN_PLATFORM: linux/amd64,linux/arm64
              strategy:
                matrix:
                  service:
                    - <+trigger.payload.repository.name>
      - stage:
          identifier: deploy
          type: Deployment
          spec:
            services:
              values: <+input>
              metadata:
                parallel: <+input>
    properties:
      ci:
        codebase:
          build:
            type: branch
            spec:
              branch: <+trigger.branch>
