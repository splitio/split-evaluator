name: docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'push' && github.run_number || github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Artifactory
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v3
        with:
          registry: splitio-docker-dev.jfrog.io
          username: ${{ secrets.ARTIFACTORY_DOCKER_USER }}
          password: ${{ secrets.ARTIFACTORY_DOCKER_PASS }}

      - name: Create build version
        run: echo "BUILD_VERSION=$(cat package.json | grep version | head -1 | awk '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')" >> $GITHUB_ENV

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          platforms: linux/amd64,linux/arm64
          tags: splitio-docker-dev.jfrog.io/${{ github.event.repository.name }}:${{ env.BUILD_VERSION}},splitio-docker-dev.jfrog.io/${{ github.event.repository.name }}:latest

  lacework:
    name: Scan Docker image
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create build version
        run: echo "BUILD_VERSION=$(cat package.json | grep version | head -1 | awk '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')" >> $GITHUB_ENV

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: splitio-docker-dev.jfrog.io/${{ github.event.repository.name }}:${{ env.BUILD_VERSION}}
          build-args: |
            ARTIFACTORY_USER=${{ secrets.ARTIFACTORY_USER }}
            ARTIFACTORY_TOKEN=${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Scan container using Lacework
        uses: lacework/lw-scanner-action@v1.4.5
        with:
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
          IMAGE_NAME: splitio-docker-dev.jfrog.io/${{ github.event.repository.name }}
          IMAGE_TAG: ${{ env.BUILD_VERSION}}
          SAVE_RESULTS_IN_LACEWORK: true
